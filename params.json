{
  "name": "Hello-world",
  "tagline": "my first test",
  "body": "\r\n###IFE\r\n任务一：零基础HTML编码：[任务详情](http://ife.baidu.com/task/detail?taskId=1)--[demo](http://leotime.github.io/IFE/test1)  \r\n任务二：零基础HTML及CSS编码（一）：[任务详情](http://ife.baidu.com/task/detail?taskId=2)--[demo](http://leotime.github.io/IFE/test2)  \r\n任务三：三栏式布局：[任务详情]()--[demo]()  \r\n\r\n#精通CSS笔记\r\n1.在分配ID和类名时，一定要尽可能保持名称有意义并于表现方式无关  \r\n2.优先用ID,其次才是类名\r\n\r\n##FE\r\n\r\n#Markdown\r\n\r\nFirst Header | Second Header\r\n------------ | -------------\r\nContent from cell 1 | Content from cell 2\r\nContent in the first column | Content in the second column\r\n\r\nIt's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com)\r\n\r\n# This is an <h1> tag\r\n## This is an <h2> tag\r\n###### This is an <h6> tag\r\n\r\n*This text will be italic*\r\n_This will also be italic_\r\n\r\n**This text will be bold**\r\n__This will also be bold__\r\n\r\n_You **can** combine them_\r\n\r\n* Item 1\r\n* Item 2\r\n  * Item 2a\r\n  * Item 2b\r\n\r\n1. Item 1\r\n2. Item 2\r\n3. Item 3\r\n   * Item 3a\r\n   * Item 3b\r\n\r\n![GitHub Logo](/images/logo.png)\r\nFormat: ![Alt Text](url)\r\n\r\nhttp://github.com - automatic!\r\n[GitHub](http://github.com)\r\n\r\nAs Kanye West said:\r\n\r\n> We're living the future so\r\n> the present is our past.\r\n\r\nI think you should use an\r\n`<addr>` element here instead.\r\n\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}